-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.categories
(
    id serial NOT NULL,
    name character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT categories_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.city
(
    id integer NOT NULL,
    ville character varying(40) COLLATE pg_catalog."default" NOT NULL,
    region integer NOT NULL,
    CONSTRAINT city_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.city_ville
(
    region_id integer NOT NULL,
    city_id integer NOT NULL,
    CONSTRAINT city_ville_pkey PRIMARY KEY (region_id, city_id)
);

CREATE TABLE IF NOT EXISTS public.event
(
    id serial NOT NULL,
    user_id integer,
    title character varying(50) COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    image character varying(255) COLLATE pg_catalog."default",
    category_id integer,
    event_mode character varying(20) COLLATE pg_catalog."default",
    places integer,
    price double precision,
    start_date timestamp without time zone,
    end_date timestamp without time zone,
    isvalidate boolean,
    event_link character varying(255) COLLATE pg_catalog."default",
    status character varying(20) COLLATE pg_catalog."default" DEFAULT 'pending'::character varying,
    region_id integer,
    city_id integer,
    content text COLLATE pg_catalog."default",
    event_date date,
    event_time time without time zone,
    haveprice boolean DEFAULT false,
    CONSTRAINT event_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.event_order
(
    id serial NOT NULL,
    ticket_id integer,
    total_amount double precision,
    status character varying(20) COLLATE pg_catalog."default",
    payment_method character varying(20) COLLATE pg_catalog."default",
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT event_order_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.event_sponsorings
(
    event_id integer NOT NULL,
    sponsoring_id integer NOT NULL,
    CONSTRAINT event_sponsorings_pkey PRIMARY KEY (event_id, sponsoring_id)
);

CREATE TABLE IF NOT EXISTS public.notification
(
    id serial NOT NULL,
    user_id integer,
    content text COLLATE pg_catalog."default",
    status character varying(20) COLLATE pg_catalog."default",
    send_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT notification_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.order_details
(
    id serial NOT NULL,
    order_id integer,
    quantity integer,
    total double precision,
    CONSTRAINT order_details_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.payments
(
    id serial NOT NULL,
    user_id integer,
    ticket_id integer,
    transaction_id character varying(255) COLLATE pg_catalog."default",
    amount numeric(10, 2) NOT NULL,
    currency character varying(10) COLLATE pg_catalog."default" DEFAULT 'USD'::character varying,
    status character varying(50) COLLATE pg_catalog."default" DEFAULT 'pending'::character varying,
    payment_method character varying(50) COLLATE pg_catalog."default" NOT NULL,
    payment_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT payments_pkey PRIMARY KEY (id),
    CONSTRAINT payments_transaction_id_key UNIQUE (transaction_id)
);

CREATE TABLE IF NOT EXISTS public.region
(
    id integer NOT NULL,
    region character varying(40) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT region_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.role
(
    id serial NOT NULL,
    name character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT role_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.sponsorings
(
    id serial NOT NULL,
    name character varying(50) COLLATE pg_catalog."default",
    logo character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT sponsorings_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.ticket
(
    id serial NOT NULL,
    event_id integer,
    user_id integer,
    type character varying(20) COLLATE pg_catalog."default",
    price double precision,
    qr_code character varying(255) COLLATE pg_catalog."default",
    places integer,
    total_price integer,
    CONSTRAINT ticket_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_role
(
    role_id integer NOT NULL,
    user_id integer NOT NULL,
    CONSTRAINT user_role_pkey PRIMARY KEY (role_id, user_id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id serial NOT NULL,
    firstname character varying(50) COLLATE pg_catalog."default",
    lastname character varying(50) COLLATE pg_catalog."default",
    email character varying(50) COLLATE pg_catalog."default",
    password_hash character varying(255) COLLATE pg_catalog."default",
    bio text COLLATE pg_catalog."default",
    avatar text COLLATE pg_catalog."default",
    google_id character varying(255) COLLATE pg_catalog."default",
    createdat timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updatedat timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    is_deleted boolean DEFAULT false,
    is_suspended boolean DEFAULT false,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_email_key UNIQUE (email),
    CONSTRAINT users_google_id_key UNIQUE (google_id)
);

ALTER TABLE IF EXISTS public.city
    ADD CONSTRAINT city_region_fkey FOREIGN KEY (region)
    REFERENCES public.region (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.city_ville
    ADD CONSTRAINT city_ville_city_id_fkey FOREIGN KEY (city_id)
    REFERENCES public.city (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.city_ville
    ADD CONSTRAINT city_ville_region_id_fkey FOREIGN KEY (region_id)
    REFERENCES public.region (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.event
    ADD CONSTRAINT event_category_id_fkey FOREIGN KEY (category_id)
    REFERENCES public.categories (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.event
    ADD CONSTRAINT event_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.event_order
    ADD CONSTRAINT event_order_ticket_id_fkey FOREIGN KEY (ticket_id)
    REFERENCES public.ticket (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.event_sponsorings
    ADD CONSTRAINT event_sponsorings_event_id_fkey FOREIGN KEY (event_id)
    REFERENCES public.event (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.event_sponsorings
    ADD CONSTRAINT event_sponsorings_sponsoring_id_fkey FOREIGN KEY (sponsoring_id)
    REFERENCES public.sponsorings (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.notification
    ADD CONSTRAINT notification_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.order_details
    ADD CONSTRAINT order_details_order_id_fkey FOREIGN KEY (order_id)
    REFERENCES public.event_order (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.payments
    ADD CONSTRAINT payments_ticket_id_fkey FOREIGN KEY (ticket_id)
    REFERENCES public.ticket (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.payments
    ADD CONSTRAINT payments_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.ticket
    ADD CONSTRAINT ticket_event_id_fkey FOREIGN KEY (event_id)
    REFERENCES public.event (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

ALTER TABLE IF EXISTS public.ticket
    ADD CONSTRAINT ticket_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_role
    ADD CONSTRAINT user_role_role_id_fkey FOREIGN KEY (role_id)
    REFERENCES public.role (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_role
    ADD CONSTRAINT user_role_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

END;


-- get the city and region and city_region rocrds from this repository and double check of the tables names;
-- https://github.com/alaouy/sql-moroccan-cities/blob/master/sql
